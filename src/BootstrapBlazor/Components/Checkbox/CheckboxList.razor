@namespace BootstrapBlazor.Components
@typeparam TValue
@inherits ValidateBase<TValue>

@if (IsShowLabel)
{
    <BootstrapLabel required="@Required" for="@Id" ShowLabelTooltip="ShowLabelTooltip" Value="@DisplayText"/>
}

@if (IsButton)
{
    <div @attributes="@AdditionalAttributes" class="@ButtonClassString">
        <div class="@ButtonGroupClassString" role="group">
            @foreach (var item in Items)
            {
                <DynamicElement TagName="span" TriggerClick="!IsDisabled" OnClick="() => OnClick(item)" class="@GetButtonItemClassString(item)">
                    @item.Text
                </DynamicElement>
            }
        </div>
    </div>
}
else
{
    <div @attributes="@AdditionalAttributes" id="@Id" class="@ClassString" tabindex="0" hidefocus="true">
        @foreach (var item in Items)
        {
            <div class="@CheckboxItemClassString">
                <Checkbox TValue="bool" IsDisabled="GetDisabledState(item)"
                          ShowAfterLabel="true" ShowLabel="false" ShowLabelTooltip="ShowLabelTooltip"
                          DisplayText="@item.Text" OnBeforeStateChanged="_onBeforeStateChangedCallback!"
                          Value="@item.Active" OnStateChanged="@((state, v) => OnStateChanged(item, v))">
                </Checkbox>
            </div>
        }
        @if (CustomOption != null)
        {
            <div class="@CheckboxItemClassString">
                <Checkbox class="w-auto me-2 d-flex align-items-center" TValue="bool" IsDisabled="GetDisabledState(CustomOption)"
                          ShowAfterLabel="true" ShowLabel="false" ShowLabelTooltip="ShowLabelTooltip"
                          OnBeforeStateChanged="_onBeforeStateChangedCallback!"
                          Value="@CustomOption.Active" OnStateChanged="@((state, v) => OnStateChanged(CustomOption, v))">
                </Checkbox>
                <BootstrapInput ShowLabel="false" Value="CustomOption.Text" OnValueChanged="CustomOptionTextChanged"></BootstrapInput>
            </div>
        }
    </div>
}



